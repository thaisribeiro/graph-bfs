'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _extends2 = require('babel-runtime/helpers/extends');var _extends3 = _interopRequireDefault(_extends2);var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);var _createClass2 = require('babel-runtime/helpers/createClass');var _createClass3 = _interopRequireDefault(_createClass2);var _middleware = require('aws-serverless-express/middleware');var _middleware2 = _interopRequireDefault(_middleware);
var _bodyParser = require('body-parser');var _bodyParser2 = _interopRequireDefault(_bodyParser);
var _compression = require('compression');var _compression2 = _interopRequireDefault(_compression);
var _cors = require('cors');var _cors2 = _interopRequireDefault(_cors);
var _helmet = require('helmet');var _helmet2 = _interopRequireDefault(_helmet);
var _morgan = require('morgan');var _morgan2 = _interopRequireDefault(_morgan);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

/**
                                                                                                                                                                              * @class ExpressMiddlewares
                                                                                                                                                                              */var
ExpressMiddlewares = function () {
  /**
                                   * @param {Object} app - Express
                                   */
  function ExpressMiddlewares(app) {(0, _classCallCheck3.default)(this, ExpressMiddlewares);
    this.app = app;
    this.express = app.express;
    this.options = app.options;
  }

  /**
     * Configure default middlewares
     */(0, _createClass3.default)(ExpressMiddlewares, [{ key: 'config', value: function config()
    {
      this.express.set('json spaces', 4);

      var format = this.stage === 'development' ? 'dev' : 'combined';

      this.express.use((0, _morgan2.default)(format, {
        stream: {
          write: function write(message) {return console.info(message);} } }));



      this.express.use((0, _helmet2.default)());

      if (this.options.cors.enable) this.express.use((0, _cors2.default)());
      if (this.isServerless) this.express.use(_middleware2.default.eventContext());
      if (this.options.compression) this.express.use((0, _compression2.default)());

      var jsonOpts = { limit: '1mb', extended: true };

      if (this.options.bodyParser && this.options.bodyParser.json) {
        jsonOpts = (0, _extends3.default)({}, jsonOpts, this.options.bodyParser.json);
      }

      this.express.use(_bodyParser2.default.json(jsonOpts));
      this.express.use(_bodyParser2.default.urlencoded({ extended: false, limit: '1mb' }));

      if (this.options.bugsnag.active &&
      this.options.bugsnag.key !== null)
      {
        bugsnag.register(this.options.bugsnag.key);

        this.express.use(bugsnag.requestHandler);
        this.express.use(bugsnag.errorHandler);
      }
    }

    /**
       * @param {String} middleware - Middleware name
       * @param {Function} cb - Function callback
       */ }, { key: 'register', value: function register(
    middleware, cb) {
      cb(this.express, require(middleware));
    } }]);return ExpressMiddlewares;}();exports.default = ExpressMiddlewares;